C51 COMPILER V9.60.7.0   MAIN                                                              11/26/2023 15:00:22 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg51.h>
   2          #define TC_MODO_0 0x00
   3          #define TC_MODO_1 0x01
   4          #define TC_MODO_2 0x02
   5          #define TC_MODO_3 0x03
   6          #define TC_TMR 0x00
   7          #define TC_CNT 0x04
   8          #define TC_GATE_LOW 0x00
   9          #define TC_GATE_HIGH 0x08
  10          
  11          struct TmodInitStruct { char mode; char cntr_tmr; char gate; } Timer0, Timer1 ;
  12          // função para inicializar Timers 0 (modo 1) e 1 (modo 2) como timers
  13          void InitTimerFunction (void) {
  14   1        char temp;
  15   1        Timer1.mode = TC_MODO_2;
  16   1        Timer1.cntr_tmr = TC_TMR;
  17   1        Timer1.gate = TC_GATE_LOW;
  18   1        temp = (Timer1.mode | Timer1.cntr_tmr | Timer1.gate) << 4;
  19   1        Timer0.mode = TC_MODO_1;
  20   1        Timer0.cntr_tmr = TC_CNT;
  21   1        Timer0.gate = TC_GATE_HIGH;
  22   1        TMOD = temp | (Timer0.mode | Timer0.cntr_tmr | Timer0.gate);
  23   1      }
  24          // OBS: para rodar o hex gerado no Edsim 2.1.20, fazer update freq = 100
  25          void main (void) {
  26   1        char dado_P1 = 0x80;
  27   1        // inicialização dos Timers 0 e 1 como timers nos modos 1 e 2, respectivamente
  28   1        InitTimerFunction();
  29   1        // estabelece valor de recarga -- inicia contagem do Timer 1
  30   1        TL1 = 6;
  31   1        TH1 = 6;
  32   1        TR1 = 1;
  33   1        // complementa nível lógico de P1.7 (pisca led) a cada final de contagem
  34   1        while (1) {
  35   2          while (!TF1); // polling
  36   2          TF1 = 0;
  37   2          P1 = P1^dado_P1;
  38   2        }
  39   1      } // end of main


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     60    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
